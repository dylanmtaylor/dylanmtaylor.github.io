#!/bin/bash 

. /home/vpssim.conf
. /etc/vpssim/linkcode.conf
if [ ! "$(cat /etc/vpssim/linkcode.conf | awk 'NR==1 {print $1}')" == "#vpssimcheckline" ]; then
clear
echo "========================================================================="
echo "Server VPSSIM.COM has an error now. ADD CODE function can not run."
echo "-------------------------------------------------------------------------"
echo "Please use ADD WEBSITE function or wait some minutes and try again !"
/etc/vpssim/menu/vpssim-them-website-menu
exit
fi
echo "========================================================================="
echo "Add Website + Lastest Wordpress code"
echo "-------------------------------------------------------------------------"
echo "You can install wordpress after add domain to VPS"
echo "========================================================================="
echo -n "Type in the domain you want to add [ENTER]: " 
read website
clear
if [ "$website" = "" ]; then
echo "========================================================================="
echo "You typed wrong, please fill accurately."
/etc/vpssim/menu/addon/website/vpssim-them-blog
exit
fi
kiemtradomain3="^([[:alnum:]]([[:alnum:]\-]{0,61}[[:alnum:]])?\.)+[[:alpha:]]{2,8}$";
if [[ ! "$website" =~ $kiemtradomain3 ]]; then
	website=`echo $website | tr '[A-Z]' '[a-z]'`
clear
echo "========================================================================="
echo "$website maybe not a domain name!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/addon/website/vpssim-them-blog
exit
fi
if [ -f /etc/nginx/conf.d/$website.conf ]; then
clear
echo "========================================================================="
echo "Discover that $website is existed in the system!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
/etc/vpssim/menu/addon/website/vpssim-them-blog
exit
fi
    mkdir -p /home/$website/public_html
    mkdir -p /home/$website/logs
    cd /home/$website/public_html
    wget http://wordpress.org/latest.tar.gz
    tar --strip-components=1 -xvf latest.tar.gz
    rm -r -f latest.tar.gz
    cd
chown -R nginx:nginx /home/$website/public_html/
find /home/$website/public_html/ -type d -exec chmod g+s {} \;
\cp -uf /etc/vpssim/menu/robots.txt /home/$website/public_html/
echo 'define( 'FS_METHOD', 'direct' );' >> /home/$website/public_html/wp-config-sample.php
    cat > "/etc/nginx/conf.d/$website.conf" <<END
server {
	    server_name www.$website;
	    rewrite ^(.*) http://$website\$1 permanent;
    	}
server {
	    listen   80;

    	access_log off;
    	error_log off;
    	# error_log /home/$website/logs/error.log;
    	root /home/$website/public_html;
include /etc/nginx/conf/ddos2.conf;
	index index.php index.html index.htm;
    	server_name $website;

#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////
#Run all the websites,if you use your rule, comment or delete the line below (AAA)
#include /etc/nginx/conf/all.conf;

#If you use your rule, comment or delete above line, and  Uncoment 3 lines belows and set your rule within it..
#location / {
#Uncomment 3 lines and set your rules here!
#}

#config for wordpress + Plugin super cache, If you run wordpress, uncomment the line below and comment out the line below the AAA
include /etc/nginx/conf/supercache.conf;  

#Do not delete the bottom line, if you delete google pagespeed function will not work!!
#include /etc/nginx/ngx_pagespeed.conf;

#security, sql injection Propeller ....(uncoment if you want to use). Because some website plugins do not run with this config, so VPSSIM to turn off default
#include /etc/nginx/conf/block.conf;
 
 
    	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
		fastcgi_connect_timeout 60;
		fastcgi_send_timeout 180;
		fastcgi_read_timeout 180;
		fastcgi_buffer_size 256k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;
        fastcgi_param SCRIPT_FILENAME /home/$website/public_html\$fastcgi_script_name;
    	}
	
include /etc/nginx/conf/staticfiles.conf;
#include /etc/nginx/conf/phpstatus.conf;
include /etc/nginx/conf/drop.conf;
#include /etc/nginx/conf/errorpage.conf;
    }
END
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then  
service nginx restart
fi
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "7" ]; then  
systemctl restart nginx.service
fi
clear
echo "$website" > /tmp/databasename.txt
sed -i 's/\./_/g' /tmp/databasename.txt
dataname=`cat /tmp/databasename.txt`_`date |md5sum |cut -c '1-2'`
username=`date |md5sum |cut -c '2-13'`
password=`date |md5sum |cut -c '14-30'`
rm -rf /tmp/databasename.txt
cat > "/tmp/config.temp" <<END
CREATE DATABASE $dataname COLLATE utf8_general_ci;
END

mysql -u root -p$mariadbpass < /tmp/config.temp
rm -f /tmp/config.temp

 cat > "/tmp/config.temp" <<END
CREATE USER '$username'@'localhost' IDENTIFIED BY '$password';
END

	mysql -u root -p$mariadbpass < /tmp/config.temp
	rm -f /tmp/config.temp

    cat > "/tmp/config.temp" <<END
GRANT ALL PRIVILEGES ON $dataname . * TO '$username'@'localhost';
END
	mysql -u root -p$mariadbpass < /tmp/config.temp
	rm -f /tmp/config.temp

    cat > "/tmp/config.temp" <<END
FLUSH PRIVILEGES;
END
	mysql -u root -p$mariadbpass < /tmp/config.temp
	rm -f /tmp/config.temp

echo "=========================================================================" >> /home/DBinfo.txt
echo "Database: $dataname - Created on: $(date +%d/%m/%Y) when add $website to VPS" >> /home/DBinfo.txt
echo "=========================================================================" >> /home/DBinfo.txt
echo "Data name: $dataname" >> /home/DBinfo.txt
echo "Username: $username" >> /home/DBinfo.txt
echo "password: $password" >> /home/DBinfo.txt
echo "" >> /home/DBinfo.txt
clear
echo "========================================================================="
echo "$website is added to server successfully "
echo "-------------------------------------------------------------------------"
echo "Wordpress has been downloaded to /home/$website/public_html "
echo "-------------------------------------------------------------------------"
echo "Database auto created by VPSSIM for $website :"
echo "-------------------------------------------------------------------------"
echo "Database: $dataname"
echo "User name: $username" 
echo "Password: $password"
echo "-------------------------------------------------------------------------"
echo "Database's infomation saved in: /home/DBinfo.txt"
rm -r -f website-wp
vpssim
